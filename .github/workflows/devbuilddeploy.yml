name: Build and deploy to aca

env:
  CONTAINER_APP_NAME: helloworldyaml  # set this to the name of your Azure Web App
  RESOURCE_GROUP_NAME: rg-poc-sfera-dev
  ACR_NAME: acrpocsfera
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: 'Build and push image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          cd HelloWorld
          docker build -f DOCKERFILE -t ${{ env.ACR_NAME }}.azurecr.io/helloworld:${{ github.sha }} .
          docker build -f DOCKERFILE -t ${{ env.ACR_NAME }}.azurecr.io/helloworld:latest .
          docker push ${{ env.ACR_NAME }}.azurecr.io/helloworld:${{ github.sha }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/helloworld:latest
          
  deploy-dev:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
    
      - name: Build and deploy Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          resourceGroup: ${{ env.RESOURCE_GROUP_NAME }}
          yamlConfigPath: aca/deployment.yaml

  deploy-prod:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: deploy-dev

    steps:
      - uses: actions/checkout@v4
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
    
      - name: Deploy on AKS
        run: |
          az aks get-credentials -g rg-poc-sfera-prod -n aks-poc-sfera-prod
          cd k8s
          kubectl apply -f deployment.yaml -n sfera
